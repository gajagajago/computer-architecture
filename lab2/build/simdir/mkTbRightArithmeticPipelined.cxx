/*
 * Generated by Bluespec Compiler (build ad73d8a)
 * 
 * On Thu Mar 25 02:08:51 KST 2021
 * 
 */
#include "bluesim_primitives.h"
#include "mkTbRightArithmeticPipelined.h"
#include "imported_BDPI_functions.h"


/* String declarations */
static std::string const __str_literal_2("FAILED %d correct values out of %d", 34u);
static std::string const __str_literal_3("FAILED Right Arithmetic Shift %b >> %d gave %b instead of %b",
					 60u);
static std::string const __str_literal_1("PASSED", 6u);


/* Constructor */
MOD_mkTbRightArithmeticPipelined::MOD_mkTbRightArithmeticPipelined(tSimStateHdl simHdl,
								   char const *name,
								   Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_bsrap_bsrp_fifo1(simHdl, "bsrap_bsrp_fifo1", this, 71u, 2u, 1u, 0u),
    INST_bsrap_bsrp_fifo2(simHdl, "bsrap_bsrp_fifo2", this, 71u, 2u, 1u, 0u),
    INST_bsrap_bsrp_fifo3(simHdl, "bsrap_bsrp_fifo3", this, 71u, 2u, 1u, 0u),
    INST_bsrap_bsrp_fifo4(simHdl, "bsrap_bsrp_fifo4", this, 71u, 2u, 1u, 0u),
    INST_bsrap_bsrp_fifo5(simHdl, "bsrap_bsrp_fifo5", this, 71u, 2u, 1u, 0u),
    INST_bsrap_bsrp_inFifo(simHdl, "bsrap_bsrp_inFifo", this, 71u, 2u, 1u, 0u),
    INST_bsrap_bsrp_outFifo(simHdl, "bsrap_bsrp_outFifo", this, 64u, 2u, 1u, 0u),
    INST_correct(simHdl, "correct", this, 32u, 0u, (tUInt8)0u),
    INST_input_cycle(simHdl, "input_cycle", this, 32u, 0u, (tUInt8)0u),
    INST_output_cycle(simHdl, "output_cycle", this, 32u, 0u, (tUInt8)0u),
    INST_randomShift_init(simHdl, "randomShift_init", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_randomVal_init(simHdl, "randomVal_init", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_valFifo(simHdl, "valFifo", this, 70u, 10u, 1u, 0u),
    PORT_RST_N((tUInt8)1u),
    DEF_x__h2134(12297829382473034410llu),
    DEF_TASK_getRandom___d93(12297829382473034410llu),
    DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d96(70u),
    DEF_bsrap_bsrp_fifo5_first____d73(71u),
    DEF_bsrap_bsrp_fifo4_first____d59(71u),
    DEF_bsrap_bsrp_fifo3_first____d45(71u),
    DEF_bsrap_bsrp_fifo2_first____d31(71u),
    DEF_bsrap_bsrp_fifo1_first____d17(71u),
    DEF_bsrap_bsrp_inFifo_first____d4(71u),
    DEF_valFifo_first____d113(70u),
    DEF_IF_bsrap_bsrp_fifo4_first__9_BIT_1_0_THEN_IF_b_ETC___d69(71u),
    DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_1_6_THEN_IF_b_ETC___d55(71u),
    DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_1_2_THEN_IF_b_ETC___d41(71u),
    DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d13(71u),
    DEF_IF_bsrap_bsrp_fifo1_first__7_BIT_1_8_THEN_IF_b_ETC___d27(71u),
    DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d98(71u)
{
  symbol_count = 25u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkTbRightArithmeticPipelined::init_symbols_0()
{
  init_symbol(&symbols[0u], "bsrap_bsrp_fifo1", SYM_MODULE, &INST_bsrap_bsrp_fifo1);
  init_symbol(&symbols[1u], "bsrap_bsrp_fifo2", SYM_MODULE, &INST_bsrap_bsrp_fifo2);
  init_symbol(&symbols[2u], "bsrap_bsrp_fifo3", SYM_MODULE, &INST_bsrap_bsrp_fifo3);
  init_symbol(&symbols[3u], "bsrap_bsrp_fifo4", SYM_MODULE, &INST_bsrap_bsrp_fifo4);
  init_symbol(&symbols[4u], "bsrap_bsrp_fifo5", SYM_MODULE, &INST_bsrap_bsrp_fifo5);
  init_symbol(&symbols[5u], "bsrap_bsrp_inFifo", SYM_MODULE, &INST_bsrap_bsrp_inFifo);
  init_symbol(&symbols[6u], "bsrap_bsrp_outFifo", SYM_MODULE, &INST_bsrap_bsrp_outFifo);
  init_symbol(&symbols[7u], "correct", SYM_MODULE, &INST_correct);
  init_symbol(&symbols[8u], "input_cycle", SYM_MODULE, &INST_input_cycle);
  init_symbol(&symbols[9u], "output_cycle", SYM_MODULE, &INST_output_cycle);
  init_symbol(&symbols[10u], "RL_bsrap_bsrp_stage1", SYM_RULE);
  init_symbol(&symbols[11u], "RL_bsrap_bsrp_stage2", SYM_RULE);
  init_symbol(&symbols[12u], "RL_bsrap_bsrp_stage3", SYM_RULE);
  init_symbol(&symbols[13u], "RL_bsrap_bsrp_stage4", SYM_RULE);
  init_symbol(&symbols[14u], "RL_bsrap_bsrp_stage5", SYM_RULE);
  init_symbol(&symbols[15u], "RL_bsrap_bsrp_stage6", SYM_RULE);
  init_symbol(&symbols[16u], "RL_randomShift_initialize", SYM_RULE);
  init_symbol(&symbols[17u], "RL_randomVal_initialize", SYM_RULE);
  init_symbol(&symbols[18u], "RL_test_request", SYM_RULE);
  init_symbol(&symbols[19u], "RL_test_response", SYM_RULE);
  init_symbol(&symbols[20u], "randomShift_init", SYM_MODULE, &INST_randomShift_init);
  init_symbol(&symbols[21u], "randomVal_init", SYM_MODULE, &INST_randomVal_init);
  init_symbol(&symbols[22u], "valFifo", SYM_MODULE, &INST_valFifo);
  init_symbol(&symbols[23u], "x__h2368", SYM_DEF, &DEF_x__h2368, 32u);
  init_symbol(&symbols[24u], "x__h2719", SYM_DEF, &DEF_x__h2719, 32u);
}


/* Rule actions */

void MOD_mkTbRightArithmeticPipelined::RL_bsrap_bsrp_stage1()
{
  tUInt8 DEF_x__h843;
  tUInt64 DEF_x__h747;
  tUInt8 DEF_x__h850;
  DEF_bsrap_bsrp_inFifo_first____d4 = INST_bsrap_bsrp_inFifo.METH_first();
  DEF_x__h850 = DEF_bsrap_bsrp_inFifo_first____d4.get_bits_in_word8(0u, 0u, 1u);
  DEF_x__h747 = DEF_bsrap_bsrp_inFifo_first____d4.get_bits_in_word8(0u,
								    1u,
								    1u) ? (((tUInt64)(DEF_x__h850)) << 63u) | primExtract64(63u,
															    71u,
															    DEF_bsrap_bsrp_inFifo_first____d4,
															    32u,
															    70u,
															    32u,
															    8u) : primExtract64(64u,
																		71u,
																		DEF_bsrap_bsrp_inFifo_first____d4,
																		32u,
																		70u,
																		32u,
																		7u);
  DEF_x__h843 = (tUInt8)63u & DEF_bsrap_bsrp_inFifo_first____d4.get_bits_in_word8(0u, 2u, 5u);
  DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d13.set_bits_in_word((tUInt8)(DEF_x__h747 >> 57u),
										2u,
										0u,
										7u).set_whole_word((tUInt32)(DEF_x__h747 >> 25u),
												   1u).set_whole_word(((((tUInt32)(33554431u & DEF_x__h747)) << 7u) | (((tUInt32)(DEF_x__h843)) << 1u)) | (tUInt32)(DEF_x__h850),
														      0u);
  INST_bsrap_bsrp_fifo1.METH_enq(DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d13);
  INST_bsrap_bsrp_inFifo.METH_deq();
}

void MOD_mkTbRightArithmeticPipelined::RL_bsrap_bsrp_stage2()
{
  tUInt8 DEF_x__h969;
  tUInt64 DEF_x__h896;
  tUInt8 DEF_x__h975;
  DEF_bsrap_bsrp_fifo1_first____d17 = INST_bsrap_bsrp_fifo1.METH_first();
  DEF_x__h975 = DEF_bsrap_bsrp_fifo1_first____d17.get_bits_in_word8(0u, 0u, 1u);
  DEF_x__h896 = DEF_bsrap_bsrp_fifo1_first____d17.get_bits_in_word8(0u,
								    1u,
								    1u) ? (((tUInt64)(DEF_x__h975 ? (tUInt8)3u : (tUInt8)0u)) << 62u) | primExtract64(62u,
																		      71u,
																		      DEF_bsrap_bsrp_fifo1_first____d17,
																		      32u,
																		      70u,
																		      32u,
																		      9u) : primExtract64(64u,
																					  71u,
																					  DEF_bsrap_bsrp_fifo1_first____d17,
																					  32u,
																					  70u,
																					  32u,
																					  7u);
  DEF_x__h969 = (tUInt8)63u & DEF_bsrap_bsrp_fifo1_first____d17.get_bits_in_word8(0u, 2u, 5u);
  DEF_IF_bsrap_bsrp_fifo1_first__7_BIT_1_8_THEN_IF_b_ETC___d27.set_bits_in_word((tUInt8)(DEF_x__h896 >> 57u),
										2u,
										0u,
										7u).set_whole_word((tUInt32)(DEF_x__h896 >> 25u),
												   1u).set_whole_word(((((tUInt32)(33554431u & DEF_x__h896)) << 7u) | (((tUInt32)(DEF_x__h969)) << 1u)) | (tUInt32)(DEF_x__h975),
														      0u);
  INST_bsrap_bsrp_fifo2.METH_enq(DEF_IF_bsrap_bsrp_fifo1_first__7_BIT_1_8_THEN_IF_b_ETC___d27);
  INST_bsrap_bsrp_fifo1.METH_deq();
}

void MOD_mkTbRightArithmeticPipelined::RL_bsrap_bsrp_stage3()
{
  tUInt8 DEF_x__h1093;
  tUInt64 DEF_x__h1020;
  tUInt8 DEF_x__h1099;
  DEF_bsrap_bsrp_fifo2_first____d31 = INST_bsrap_bsrp_fifo2.METH_first();
  DEF_x__h1099 = DEF_bsrap_bsrp_fifo2_first____d31.get_bits_in_word8(0u, 0u, 1u);
  DEF_x__h1020 = DEF_bsrap_bsrp_fifo2_first____d31.get_bits_in_word8(0u,
								     1u,
								     1u) ? (((tUInt64)(DEF_x__h1099 ? (tUInt8)15u : (tUInt8)0u)) << 60u) | primExtract64(60u,
																			 71u,
																			 DEF_bsrap_bsrp_fifo2_first____d31,
																			 32u,
																			 70u,
																			 32u,
																			 11u) : primExtract64(64u,
																					      71u,
																					      DEF_bsrap_bsrp_fifo2_first____d31,
																					      32u,
																					      70u,
																					      32u,
																					      7u);
  DEF_x__h1093 = (tUInt8)63u & DEF_bsrap_bsrp_fifo2_first____d31.get_bits_in_word8(0u, 2u, 5u);
  DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_1_2_THEN_IF_b_ETC___d41.set_bits_in_word((tUInt8)(DEF_x__h1020 >> 57u),
										2u,
										0u,
										7u).set_whole_word((tUInt32)(DEF_x__h1020 >> 25u),
												   1u).set_whole_word(((((tUInt32)(33554431u & DEF_x__h1020)) << 7u) | (((tUInt32)(DEF_x__h1093)) << 1u)) | (tUInt32)(DEF_x__h1099),
														      0u);
  INST_bsrap_bsrp_fifo3.METH_enq(DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_1_2_THEN_IF_b_ETC___d41);
  INST_bsrap_bsrp_fifo2.METH_deq();
}

void MOD_mkTbRightArithmeticPipelined::RL_bsrap_bsrp_stage4()
{
  tUInt8 DEF_x__h1217;
  tUInt64 DEF_x__h1144;
  tUInt8 DEF_x__h1223;
  DEF_bsrap_bsrp_fifo3_first____d45 = INST_bsrap_bsrp_fifo3.METH_first();
  DEF_x__h1223 = DEF_bsrap_bsrp_fifo3_first____d45.get_bits_in_word8(0u, 0u, 1u);
  DEF_x__h1144 = DEF_bsrap_bsrp_fifo3_first____d45.get_bits_in_word8(0u,
								     1u,
								     1u) ? (((tUInt64)(DEF_x__h1223 ? (tUInt8)255u : (tUInt8)0u)) << 56u) | primExtract64(56u,
																			  71u,
																			  DEF_bsrap_bsrp_fifo3_first____d45,
																			  32u,
																			  70u,
																			  32u,
																			  15u) : primExtract64(64u,
																					       71u,
																					       DEF_bsrap_bsrp_fifo3_first____d45,
																					       32u,
																					       70u,
																					       32u,
																					       7u);
  DEF_x__h1217 = (tUInt8)63u & DEF_bsrap_bsrp_fifo3_first____d45.get_bits_in_word8(0u, 2u, 5u);
  DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_1_6_THEN_IF_b_ETC___d55.set_bits_in_word((tUInt8)(DEF_x__h1144 >> 57u),
										2u,
										0u,
										7u).set_whole_word((tUInt32)(DEF_x__h1144 >> 25u),
												   1u).set_whole_word(((((tUInt32)(33554431u & DEF_x__h1144)) << 7u) | (((tUInt32)(DEF_x__h1217)) << 1u)) | (tUInt32)(DEF_x__h1223),
														      0u);
  INST_bsrap_bsrp_fifo4.METH_enq(DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_1_6_THEN_IF_b_ETC___d55);
  INST_bsrap_bsrp_fifo3.METH_deq();
}

void MOD_mkTbRightArithmeticPipelined::RL_bsrap_bsrp_stage5()
{
  tUInt8 DEF_x__h1341;
  tUInt64 DEF_x__h1268;
  tUInt8 DEF_x__h1347;
  DEF_bsrap_bsrp_fifo4_first____d59 = INST_bsrap_bsrp_fifo4.METH_first();
  DEF_x__h1347 = DEF_bsrap_bsrp_fifo4_first____d59.get_bits_in_word8(0u, 0u, 1u);
  DEF_x__h1268 = DEF_bsrap_bsrp_fifo4_first____d59.get_bits_in_word8(0u,
								     1u,
								     1u) ? (((tUInt64)(DEF_x__h1347 ? 65535u : 0u)) << 48u) | primExtract64(48u,
																	    71u,
																	    DEF_bsrap_bsrp_fifo4_first____d59,
																	    32u,
																	    70u,
																	    32u,
																	    23u) : primExtract64(64u,
																				 71u,
																				 DEF_bsrap_bsrp_fifo4_first____d59,
																				 32u,
																				 70u,
																				 32u,
																				 7u);
  DEF_x__h1341 = (tUInt8)63u & DEF_bsrap_bsrp_fifo4_first____d59.get_bits_in_word8(0u, 2u, 5u);
  DEF_IF_bsrap_bsrp_fifo4_first__9_BIT_1_0_THEN_IF_b_ETC___d69.set_bits_in_word((tUInt8)(DEF_x__h1268 >> 57u),
										2u,
										0u,
										7u).set_whole_word((tUInt32)(DEF_x__h1268 >> 25u),
												   1u).set_whole_word(((((tUInt32)(33554431u & DEF_x__h1268)) << 7u) | (((tUInt32)(DEF_x__h1341)) << 1u)) | (tUInt32)(DEF_x__h1347),
														      0u);
  INST_bsrap_bsrp_fifo5.METH_enq(DEF_IF_bsrap_bsrp_fifo4_first__9_BIT_1_0_THEN_IF_b_ETC___d69);
  INST_bsrap_bsrp_fifo4.METH_deq();
}

void MOD_mkTbRightArithmeticPipelined::RL_bsrap_bsrp_stage6()
{
  tUInt64 DEF_operand__h1364;
  DEF_bsrap_bsrp_fifo5_first____d73 = INST_bsrap_bsrp_fifo5.METH_first();
  DEF_operand__h1364 = DEF_bsrap_bsrp_fifo5_first____d73.get_bits_in_word8(0u,
									   1u,
									   1u) ? (((tUInt64)(DEF_bsrap_bsrp_fifo5_first____d73.get_bits_in_word8(0u,
																		 0u,
																		 1u) ? 4294967295u : 0u)) << 32u) | (tUInt64)(primExtract32(32u,
																									    71u,
																									    DEF_bsrap_bsrp_fifo5_first____d73,
																									    32u,
																									    70u,
																									    32u,
																									    39u)) : primExtract64(64u,
																												  71u,
																												  DEF_bsrap_bsrp_fifo5_first____d73,
																												  32u,
																												  70u,
																												  32u,
																												  7u);
  INST_bsrap_bsrp_outFifo.METH_enq(DEF_operand__h1364);
  INST_bsrap_bsrp_fifo5.METH_deq();
}

void MOD_mkTbRightArithmeticPipelined::RL_randomVal_initialize()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    setSeed(3735928559llu);
  INST_randomVal_init.METH_write((tUInt8)1u);
}

void MOD_mkTbRightArithmeticPipelined::RL_randomShift_initialize()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    setSeed(3405691582llu);
  INST_randomShift_init.METH_write((tUInt8)1u);
}

void MOD_mkTbRightArithmeticPipelined::RL_test_request()
{
  tUInt32 DEF_x__h2349;
  tUInt8 DEF_x__h2321;
  tUInt8 DEF_x__h2286;
  DEF_x__h2368 = INST_input_cycle.METH_read();
  DEF_x__h2349 = DEF_x__h2368 + 1u;
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_TASK_getRandom___d93 = getRandom();
  DEF_x__h2321 = (tUInt8)(DEF_TASK_getRandom___d93 >> 63u);
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_x__h2134 = getRandom();
  DEF_x__h2286 = (tUInt8)((tUInt8)63u & DEF_x__h2134);
  DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d96.set_bits_in_word((tUInt8)(DEF_TASK_getRandom___d93 >> 58u),
										2u,
										0u,
										6u).set_whole_word((tUInt32)(DEF_TASK_getRandom___d93 >> 26u),
												   1u).set_whole_word((((tUInt32)(67108863u & DEF_TASK_getRandom___d93)) << 6u) | (tUInt32)(DEF_x__h2286),
														      0u);
  DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d98.set_bits_in_word((tUInt8)(DEF_TASK_getRandom___d93 >> 57u),
										2u,
										0u,
										7u).set_whole_word((tUInt32)(DEF_TASK_getRandom___d93 >> 25u),
												   1u).set_whole_word(((((tUInt32)(33554431u & DEF_TASK_getRandom___d93)) << 7u) | (((tUInt32)(DEF_x__h2286)) << 1u)) | (tUInt32)(DEF_x__h2321),
														      0u);
  INST_valFifo.METH_enq(DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d96);
  INST_bsrap_bsrp_inFifo.METH_enq(DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d98);
  INST_input_cycle.METH_write(DEF_x__h2349);
}

void MOD_mkTbRightArithmeticPipelined::RL_test_response()
{
  tUInt32 DEF_x__h2715;
  tUInt32 DEF_x__h2579;
  tUInt8 DEF_output_cycle_00_EQ_128_01_AND_correct_06_EQ_12_ETC___d108;
  tUInt8 DEF_output_cycle_00_EQ_128_01_AND_NOT_correct_06_E_ETC___d110;
  tUInt8 DEF_NOT_output_cycle_00_EQ_128_01_11_AND_bsrap_bsr_ETC___d118;
  tUInt8 DEF_NOT_output_cycle_00_EQ_128_01___d111;
  tUInt8 DEF_NOT_output_cycle_00_EQ_128_01_11_AND_NOT_bsrap_ETC___d121;
  tUInt8 DEF_correct_06_EQ_128___d107;
  tUInt64 DEF_trueResult__h2507;
  tUInt8 DEF_valFifo_first__13_BITS_5_TO_0___d115;
  tUInt64 DEF_val__h2504;
  tUInt64 DEF_v__h2437;
  tUInt32 DEF_x__h2589;
  tUInt8 DEF_bsrap_bsrp_outFifo_first__12_EQ_valFifo_first__ETC___d117;
  DEF_x__h2719 = INST_output_cycle.METH_read();
  DEF_x__h2589 = INST_correct.METH_read();
  DEF_valFifo_first____d113 = INST_valFifo.METH_first();
  DEF_v__h2437 = INST_bsrap_bsrp_outFifo.METH_first();
  DEF_val__h2504 = primExtract64(64u, 70u, DEF_valFifo_first____d113, 32u, 69u, 32u, 6u);
  DEF_valFifo_first__13_BITS_5_TO_0___d115 = DEF_valFifo_first____d113.get_bits_in_word8(0u, 0u, 6u);
  DEF_trueResult__h2507 = primShiftRA64(64u,
					64u,
					(tUInt64)(DEF_val__h2504),
					6u,
					(tUInt8)(DEF_valFifo_first__13_BITS_5_TO_0___d115));
  DEF_bsrap_bsrp_outFifo_first__12_EQ_valFifo_first__ETC___d117 = DEF_v__h2437 == DEF_trueResult__h2507;
  DEF_correct_06_EQ_128___d107 = DEF_x__h2589 == 128u;
  DEF_output_cycle_00_EQ_128___d101 = DEF_x__h2719 == 128u;
  DEF_NOT_output_cycle_00_EQ_128_01___d111 = !DEF_output_cycle_00_EQ_128___d101;
  DEF_NOT_output_cycle_00_EQ_128_01_11_AND_NOT_bsrap_ETC___d121 = DEF_NOT_output_cycle_00_EQ_128_01___d111 && !DEF_bsrap_bsrp_outFifo_first__12_EQ_valFifo_first__ETC___d117;
  DEF_NOT_output_cycle_00_EQ_128_01_11_AND_bsrap_bsr_ETC___d118 = DEF_NOT_output_cycle_00_EQ_128_01___d111 && DEF_bsrap_bsrp_outFifo_first__12_EQ_valFifo_first__ETC___d117;
  DEF_output_cycle_00_EQ_128_01_AND_NOT_correct_06_E_ETC___d110 = DEF_output_cycle_00_EQ_128___d101 && !DEF_correct_06_EQ_128___d107;
  DEF_output_cycle_00_EQ_128_01_AND_correct_06_EQ_12_ETC___d108 = DEF_output_cycle_00_EQ_128___d101 && DEF_correct_06_EQ_128___d107;
  DEF_x__h2579 = DEF_x__h2589 + 1u;
  DEF_x__h2715 = DEF_x__h2719 + 1u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_output_cycle_00_EQ_128_01_AND_correct_06_EQ_12_ETC___d108)
      dollar_display(sim_hdl, this, "s", &__str_literal_1);
    if (DEF_output_cycle_00_EQ_128_01_AND_correct_06_EQ_12_ETC___d108)
      dollar_finish(sim_hdl, "32", 1u);
    if (DEF_output_cycle_00_EQ_128_01_AND_NOT_correct_06_E_ETC___d110)
      dollar_display(sim_hdl, this, "s,32,32", &__str_literal_2, DEF_x__h2589, DEF_x__h2719);
    if (DEF_output_cycle_00_EQ_128_01_AND_NOT_correct_06_E_ETC___d110)
      dollar_finish(sim_hdl, "32", 1u);
  }
  if (DEF_NOT_output_cycle_00_EQ_128_01___d111)
    INST_bsrap_bsrp_outFifo.METH_deq();
  if (DEF_NOT_output_cycle_00_EQ_128_01_11_AND_bsrap_bsr_ETC___d118)
    INST_correct.METH_write(DEF_x__h2579);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_output_cycle_00_EQ_128_01_11_AND_NOT_bsrap_ETC___d121)
      dollar_display(sim_hdl,
		     this,
		     "s,64,6,64,64",
		     &__str_literal_3,
		     DEF_val__h2504,
		     DEF_valFifo_first__13_BITS_5_TO_0___d115,
		     DEF_v__h2437,
		     DEF_trueResult__h2507);
    if (DEF_NOT_output_cycle_00_EQ_128_01_11_AND_NOT_bsrap_ETC___d121)
      dollar_finish(sim_hdl, "32", 1u);
  }
  if (DEF_NOT_output_cycle_00_EQ_128_01___d111)
    INST_valFifo.METH_deq();
  if (DEF_NOT_output_cycle_00_EQ_128_01___d111)
    INST_output_cycle.METH_write(DEF_x__h2715);
}


/* Methods */


/* Reset routines */

void MOD_mkTbRightArithmeticPipelined::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_valFifo.reset_RST(ARG_rst_in);
  INST_randomVal_init.reset_RST(ARG_rst_in);
  INST_randomShift_init.reset_RST(ARG_rst_in);
  INST_output_cycle.reset_RST(ARG_rst_in);
  INST_input_cycle.reset_RST(ARG_rst_in);
  INST_correct.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_outFifo.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_inFifo.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_fifo5.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_fifo4.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_fifo3.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_fifo2.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_fifo1.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkTbRightArithmeticPipelined::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkTbRightArithmeticPipelined::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_bsrap_bsrp_fifo1.dump_state(indent + 2u);
  INST_bsrap_bsrp_fifo2.dump_state(indent + 2u);
  INST_bsrap_bsrp_fifo3.dump_state(indent + 2u);
  INST_bsrap_bsrp_fifo4.dump_state(indent + 2u);
  INST_bsrap_bsrp_fifo5.dump_state(indent + 2u);
  INST_bsrap_bsrp_inFifo.dump_state(indent + 2u);
  INST_bsrap_bsrp_outFifo.dump_state(indent + 2u);
  INST_correct.dump_state(indent + 2u);
  INST_input_cycle.dump_state(indent + 2u);
  INST_output_cycle.dump_state(indent + 2u);
  INST_randomShift_init.dump_state(indent + 2u);
  INST_randomVal_init.dump_state(indent + 2u);
  INST_valFifo.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkTbRightArithmeticPipelined::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 33u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_bsrap_bsrp_fifo1_first__7_BIT_1_8_THEN_IF_b_ETC___d27", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_bsrap_bsrp_fifo2_first__1_BIT_1_2_THEN_IF_b_ETC___d41", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_bsrap_bsrp_fifo3_first__5_BIT_1_6_THEN_IF_b_ETC___d55", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_bsrap_bsrp_fifo4_first__9_BIT_1_0_THEN_IF_b_ETC___d69", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d13", 71u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d96", 70u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d98", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "TASK_getRandom___d93", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bsrap_bsrp_fifo1_first____d17", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bsrap_bsrp_fifo2_first____d31", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bsrap_bsrp_fifo3_first____d45", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bsrap_bsrp_fifo4_first____d59", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bsrap_bsrp_fifo5_first____d73", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bsrap_bsrp_inFifo_first____d4", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "output_cycle_00_EQ_128___d101", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "valFifo_first____d113", 70u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h2134", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h2368", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h2719", 32u);
  num = INST_bsrap_bsrp_fifo1.dump_VCD_defs(num);
  num = INST_bsrap_bsrp_fifo2.dump_VCD_defs(num);
  num = INST_bsrap_bsrp_fifo3.dump_VCD_defs(num);
  num = INST_bsrap_bsrp_fifo4.dump_VCD_defs(num);
  num = INST_bsrap_bsrp_fifo5.dump_VCD_defs(num);
  num = INST_bsrap_bsrp_inFifo.dump_VCD_defs(num);
  num = INST_bsrap_bsrp_outFifo.dump_VCD_defs(num);
  num = INST_correct.dump_VCD_defs(num);
  num = INST_input_cycle.dump_VCD_defs(num);
  num = INST_output_cycle.dump_VCD_defs(num);
  num = INST_randomShift_init.dump_VCD_defs(num);
  num = INST_randomVal_init.dump_VCD_defs(num);
  num = INST_valFifo.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkTbRightArithmeticPipelined::dump_VCD(tVCDDumpType dt,
						unsigned int levels,
						MOD_mkTbRightArithmeticPipelined &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkTbRightArithmeticPipelined::vcd_defs(tVCDDumpType dt,
						MOD_mkTbRightArithmeticPipelined &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 70u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 70u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_IF_bsrap_bsrp_fifo1_first__7_BIT_1_8_THEN_IF_b_ETC___d27) != DEF_IF_bsrap_bsrp_fifo1_first__7_BIT_1_8_THEN_IF_b_ETC___d27)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_bsrap_bsrp_fifo1_first__7_BIT_1_8_THEN_IF_b_ETC___d27, 71u);
	backing.DEF_IF_bsrap_bsrp_fifo1_first__7_BIT_1_8_THEN_IF_b_ETC___d27 = DEF_IF_bsrap_bsrp_fifo1_first__7_BIT_1_8_THEN_IF_b_ETC___d27;
      }
      ++num;
      if ((backing.DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_1_2_THEN_IF_b_ETC___d41) != DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_1_2_THEN_IF_b_ETC___d41)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_1_2_THEN_IF_b_ETC___d41, 71u);
	backing.DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_1_2_THEN_IF_b_ETC___d41 = DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_1_2_THEN_IF_b_ETC___d41;
      }
      ++num;
      if ((backing.DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_1_6_THEN_IF_b_ETC___d55) != DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_1_6_THEN_IF_b_ETC___d55)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_1_6_THEN_IF_b_ETC___d55, 71u);
	backing.DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_1_6_THEN_IF_b_ETC___d55 = DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_1_6_THEN_IF_b_ETC___d55;
      }
      ++num;
      if ((backing.DEF_IF_bsrap_bsrp_fifo4_first__9_BIT_1_0_THEN_IF_b_ETC___d69) != DEF_IF_bsrap_bsrp_fifo4_first__9_BIT_1_0_THEN_IF_b_ETC___d69)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_bsrap_bsrp_fifo4_first__9_BIT_1_0_THEN_IF_b_ETC___d69, 71u);
	backing.DEF_IF_bsrap_bsrp_fifo4_first__9_BIT_1_0_THEN_IF_b_ETC___d69 = DEF_IF_bsrap_bsrp_fifo4_first__9_BIT_1_0_THEN_IF_b_ETC___d69;
      }
      ++num;
      if ((backing.DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d13) != DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d13)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d13, 71u);
	backing.DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d13 = DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d13;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d96) != DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d96)
      {
	vcd_write_val(sim_hdl, num, DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d96, 70u);
	backing.DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d96 = DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d96;
      }
      ++num;
      if ((backing.DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d98) != DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d98)
      {
	vcd_write_val(sim_hdl, num, DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d98, 71u);
	backing.DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d98 = DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d98;
      }
      ++num;
      if ((backing.DEF_TASK_getRandom___d93) != DEF_TASK_getRandom___d93)
      {
	vcd_write_val(sim_hdl, num, DEF_TASK_getRandom___d93, 64u);
	backing.DEF_TASK_getRandom___d93 = DEF_TASK_getRandom___d93;
      }
      ++num;
      if ((backing.DEF_bsrap_bsrp_fifo1_first____d17) != DEF_bsrap_bsrp_fifo1_first____d17)
      {
	vcd_write_val(sim_hdl, num, DEF_bsrap_bsrp_fifo1_first____d17, 71u);
	backing.DEF_bsrap_bsrp_fifo1_first____d17 = DEF_bsrap_bsrp_fifo1_first____d17;
      }
      ++num;
      if ((backing.DEF_bsrap_bsrp_fifo2_first____d31) != DEF_bsrap_bsrp_fifo2_first____d31)
      {
	vcd_write_val(sim_hdl, num, DEF_bsrap_bsrp_fifo2_first____d31, 71u);
	backing.DEF_bsrap_bsrp_fifo2_first____d31 = DEF_bsrap_bsrp_fifo2_first____d31;
      }
      ++num;
      if ((backing.DEF_bsrap_bsrp_fifo3_first____d45) != DEF_bsrap_bsrp_fifo3_first____d45)
      {
	vcd_write_val(sim_hdl, num, DEF_bsrap_bsrp_fifo3_first____d45, 71u);
	backing.DEF_bsrap_bsrp_fifo3_first____d45 = DEF_bsrap_bsrp_fifo3_first____d45;
      }
      ++num;
      if ((backing.DEF_bsrap_bsrp_fifo4_first____d59) != DEF_bsrap_bsrp_fifo4_first____d59)
      {
	vcd_write_val(sim_hdl, num, DEF_bsrap_bsrp_fifo4_first____d59, 71u);
	backing.DEF_bsrap_bsrp_fifo4_first____d59 = DEF_bsrap_bsrp_fifo4_first____d59;
      }
      ++num;
      if ((backing.DEF_bsrap_bsrp_fifo5_first____d73) != DEF_bsrap_bsrp_fifo5_first____d73)
      {
	vcd_write_val(sim_hdl, num, DEF_bsrap_bsrp_fifo5_first____d73, 71u);
	backing.DEF_bsrap_bsrp_fifo5_first____d73 = DEF_bsrap_bsrp_fifo5_first____d73;
      }
      ++num;
      if ((backing.DEF_bsrap_bsrp_inFifo_first____d4) != DEF_bsrap_bsrp_inFifo_first____d4)
      {
	vcd_write_val(sim_hdl, num, DEF_bsrap_bsrp_inFifo_first____d4, 71u);
	backing.DEF_bsrap_bsrp_inFifo_first____d4 = DEF_bsrap_bsrp_inFifo_first____d4;
      }
      ++num;
      if ((backing.DEF_output_cycle_00_EQ_128___d101) != DEF_output_cycle_00_EQ_128___d101)
      {
	vcd_write_val(sim_hdl, num, DEF_output_cycle_00_EQ_128___d101, 1u);
	backing.DEF_output_cycle_00_EQ_128___d101 = DEF_output_cycle_00_EQ_128___d101;
      }
      ++num;
      if ((backing.DEF_valFifo_first____d113) != DEF_valFifo_first____d113)
      {
	vcd_write_val(sim_hdl, num, DEF_valFifo_first____d113, 70u);
	backing.DEF_valFifo_first____d113 = DEF_valFifo_first____d113;
      }
      ++num;
      if ((backing.DEF_x__h2134) != DEF_x__h2134)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h2134, 64u);
	backing.DEF_x__h2134 = DEF_x__h2134;
      }
      ++num;
      if ((backing.DEF_x__h2368) != DEF_x__h2368)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h2368, 32u);
	backing.DEF_x__h2368 = DEF_x__h2368;
      }
      ++num;
      if ((backing.DEF_x__h2719) != DEF_x__h2719)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h2719, 32u);
	backing.DEF_x__h2719 = DEF_x__h2719;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_IF_bsrap_bsrp_fifo1_first__7_BIT_1_8_THEN_IF_b_ETC___d27, 71u);
      backing.DEF_IF_bsrap_bsrp_fifo1_first__7_BIT_1_8_THEN_IF_b_ETC___d27 = DEF_IF_bsrap_bsrp_fifo1_first__7_BIT_1_8_THEN_IF_b_ETC___d27;
      vcd_write_val(sim_hdl, num++, DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_1_2_THEN_IF_b_ETC___d41, 71u);
      backing.DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_1_2_THEN_IF_b_ETC___d41 = DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_1_2_THEN_IF_b_ETC___d41;
      vcd_write_val(sim_hdl, num++, DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_1_6_THEN_IF_b_ETC___d55, 71u);
      backing.DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_1_6_THEN_IF_b_ETC___d55 = DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_1_6_THEN_IF_b_ETC___d55;
      vcd_write_val(sim_hdl, num++, DEF_IF_bsrap_bsrp_fifo4_first__9_BIT_1_0_THEN_IF_b_ETC___d69, 71u);
      backing.DEF_IF_bsrap_bsrp_fifo4_first__9_BIT_1_0_THEN_IF_b_ETC___d69 = DEF_IF_bsrap_bsrp_fifo4_first__9_BIT_1_0_THEN_IF_b_ETC___d69;
      vcd_write_val(sim_hdl, num++, DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d13, 71u);
      backing.DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d13 = DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d13;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d96, 70u);
      backing.DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d96 = DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d96;
      vcd_write_val(sim_hdl, num++, DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d98, 71u);
      backing.DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d98 = DEF_TASK_getRandom_3_CONCAT_TASK_getRandom_4_BITS__ETC___d98;
      vcd_write_val(sim_hdl, num++, DEF_TASK_getRandom___d93, 64u);
      backing.DEF_TASK_getRandom___d93 = DEF_TASK_getRandom___d93;
      vcd_write_val(sim_hdl, num++, DEF_bsrap_bsrp_fifo1_first____d17, 71u);
      backing.DEF_bsrap_bsrp_fifo1_first____d17 = DEF_bsrap_bsrp_fifo1_first____d17;
      vcd_write_val(sim_hdl, num++, DEF_bsrap_bsrp_fifo2_first____d31, 71u);
      backing.DEF_bsrap_bsrp_fifo2_first____d31 = DEF_bsrap_bsrp_fifo2_first____d31;
      vcd_write_val(sim_hdl, num++, DEF_bsrap_bsrp_fifo3_first____d45, 71u);
      backing.DEF_bsrap_bsrp_fifo3_first____d45 = DEF_bsrap_bsrp_fifo3_first____d45;
      vcd_write_val(sim_hdl, num++, DEF_bsrap_bsrp_fifo4_first____d59, 71u);
      backing.DEF_bsrap_bsrp_fifo4_first____d59 = DEF_bsrap_bsrp_fifo4_first____d59;
      vcd_write_val(sim_hdl, num++, DEF_bsrap_bsrp_fifo5_first____d73, 71u);
      backing.DEF_bsrap_bsrp_fifo5_first____d73 = DEF_bsrap_bsrp_fifo5_first____d73;
      vcd_write_val(sim_hdl, num++, DEF_bsrap_bsrp_inFifo_first____d4, 71u);
      backing.DEF_bsrap_bsrp_inFifo_first____d4 = DEF_bsrap_bsrp_inFifo_first____d4;
      vcd_write_val(sim_hdl, num++, DEF_output_cycle_00_EQ_128___d101, 1u);
      backing.DEF_output_cycle_00_EQ_128___d101 = DEF_output_cycle_00_EQ_128___d101;
      vcd_write_val(sim_hdl, num++, DEF_valFifo_first____d113, 70u);
      backing.DEF_valFifo_first____d113 = DEF_valFifo_first____d113;
      vcd_write_val(sim_hdl, num++, DEF_x__h2134, 64u);
      backing.DEF_x__h2134 = DEF_x__h2134;
      vcd_write_val(sim_hdl, num++, DEF_x__h2368, 32u);
      backing.DEF_x__h2368 = DEF_x__h2368;
      vcd_write_val(sim_hdl, num++, DEF_x__h2719, 32u);
      backing.DEF_x__h2719 = DEF_x__h2719;
    }
}

void MOD_mkTbRightArithmeticPipelined::vcd_prims(tVCDDumpType dt,
						 MOD_mkTbRightArithmeticPipelined &backing)
{
  INST_bsrap_bsrp_fifo1.dump_VCD(dt, backing.INST_bsrap_bsrp_fifo1);
  INST_bsrap_bsrp_fifo2.dump_VCD(dt, backing.INST_bsrap_bsrp_fifo2);
  INST_bsrap_bsrp_fifo3.dump_VCD(dt, backing.INST_bsrap_bsrp_fifo3);
  INST_bsrap_bsrp_fifo4.dump_VCD(dt, backing.INST_bsrap_bsrp_fifo4);
  INST_bsrap_bsrp_fifo5.dump_VCD(dt, backing.INST_bsrap_bsrp_fifo5);
  INST_bsrap_bsrp_inFifo.dump_VCD(dt, backing.INST_bsrap_bsrp_inFifo);
  INST_bsrap_bsrp_outFifo.dump_VCD(dt, backing.INST_bsrap_bsrp_outFifo);
  INST_correct.dump_VCD(dt, backing.INST_correct);
  INST_input_cycle.dump_VCD(dt, backing.INST_input_cycle);
  INST_output_cycle.dump_VCD(dt, backing.INST_output_cycle);
  INST_randomShift_init.dump_VCD(dt, backing.INST_randomShift_init);
  INST_randomVal_init.dump_VCD(dt, backing.INST_randomVal_init);
  INST_valFifo.dump_VCD(dt, backing.INST_valFifo);
}
